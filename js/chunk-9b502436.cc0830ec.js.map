{"version":3,"sources":["webpack:///./src/components/page/upload.vue?cec4","webpack:///src/components/page/upload.vue","webpack:///./src/components/page/upload.vue?f69a","webpack:///./src/components/page/upload.vue","webpack:///./node_modules/vue-cropperjs/dist/VueCropper.js","webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","slot","staticRenderFns","component","Object","defineProperty","exports","value","_cropperjs","_cropperjs2","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","prototype","hasOwnProperty","call","previewPropType","window","String","Array","Element","NodeList","h","style","containerStyle","ref","src","alt","imgStyle","props","type","viewMode","Number","dragMode","aspectRatio","data","preview","responsive","Boolean","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","Function","cropstart","cropmove","cropend","crop","zoom","mounted","_$options$props","$options","key","undefined","cropper","$refs","img","methods","reset","clear","initCrop","replace","url","onlyColorChanged","arguments","length","enable","disable","destroy","move","offsetX","offsetY","moveTo","x","y","relativeZoom","ratio","_originalEvent","zoomTo","rotate","degree","rotateTo","scaleX","_scaleX","scaleY","_scaleY","scale","getData","rounded","setData","getContainerData","getImageData","getCanvasData","setCanvasData","getCropBoxData","setCropBoxData","getCroppedCanvas","options","setAspectRatio","setDragMode","mode","global","factory","module","_typeof","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","isArray","arr2","iter","toString","from","IS_BROWSER","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_TOUCH_START","EVENT_TOUCH_MOVE","EVENT_TOUCH_END","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","MIN_CONTAINER_WIDTH","MIN_CONTAINER_HEIGHT","DEFAULTS","initialAspectRatio","NaN","TEMPLATE","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","isPlainObject","_constructor","error","isFunction","slice","toArray","forEach","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","property","hasClass","classList","contains","className","addClass","elem","add","trim","removeClass","remove","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","name","dataset","getAttribute","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","get","set","addEventListener","removeEventListener","removeListener","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","getRotatedSizes","_ref5","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","n","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","ctrlKey","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","check","side","p","hasSameSize","isImg","replaced","uncreate","load","originalUrl","_this$canvasData","pivot","oldRatio","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"mappings":"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","file":"js/chunk-9b502436.cc0830ec.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',[_c('i',{staticClass:\"el-icon-lx-calendar\"}),_vm._v(\" 表单\")]),_c('el-breadcrumb-item',[_vm._v(\"图片上传\")])],1),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持拖拽\")]),_c('div',{staticClass:\"plugins-tips\"},[_vm._v(\"\\n            Element UI自带上传组件。\\n        \")]),_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"drag\":\"\",\"action\":\"http://jsonplaceholder.typicode.com/api/posts/\",\"multiple\":\"\"}},[_c('i',{staticClass:\"el-icon-upload\"}),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"将文件拖到此处，或\"),_c('em',[_vm._v(\"点击上传\")])]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"只能上传jpg/png文件，且不超过500kb\")])])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <el-breadcrumb separator=\"/\">\r\n            <el-breadcrumb-item><i class=\"el-icon-lx-calendar\"></i> 表单</el-breadcrumb-item>\r\n            <el-breadcrumb-item>图片上传</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n        <div class=\"container\">\r\n            <div class=\"content-title\">支持拖拽</div>\r\n            <div class=\"plugins-tips\">\r\n                Element UI自带上传组件。\r\n            </div>\r\n            <el-upload\r\n                class=\"upload-demo\"\r\n                drag\r\n                action=\"http://jsonplaceholder.typicode.com/api/posts/\"\r\n                multiple>\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>\r\n            </el-upload>\r\n            <!-- <div class=\"content-title\">支持裁剪</div>\r\n            <div class=\"plugins-tips\">\r\n                vue-cropperjs：一个封装了 cropperjs 的 Vue 组件。\r\n            </div> -->\r\n            <!-- <div class=\"crop-demo\">\r\n                <img :src=\"cropImg\" class=\"pre-img\">\r\n                <div class=\"crop-demo-btn\">选择图片\r\n                    <input class=\"crop-input\" type=\"file\" name=\"image\" accept=\"image/*\" @change=\"setImage\"/>\r\n                </div>\r\n            </div> -->\r\n        \r\n            <!-- <el-dialog title=\"裁剪图片\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n                <vue-cropper ref='cropper' :src=\"imgSrc\" :ready=\"cropImage\" :zoom=\"cropImage\" :cropmove=\"cropImage\" style=\"width:100%;height:300px;\"></vue-cropper>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelCrop\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n                </span>\r\n            </el-dialog> -->\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport VueCropper  from 'vue-cropperjs';\r\nexport default {\r\n    components: {\r\n        VueCropper\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    \r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./upload.vue?vue&type=template&id=c6eb9c70&scoped=true&\"\nimport script from \"./upload.vue?vue&type=script&lang=js&\"\nexport * from \"./upload.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c6eb9c70\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar previewPropType = typeof window === 'undefined' ? [String, Array] : [String, Array, Element, NodeList];\n\nexports.default = {\n  render: function render(h) {\n    return h('div', { style: this.containerStyle }, [h('img', {\n      ref: 'img',\n      attrs: {\n        src: this.src,\n        alt: this.alt || 'image',\n        style: 'max-width: 100%'\n      },\n      style: this.imgStyle\n    })]);\n  },\n\n  props: {\n    containerStyle: Object,\n    src: {\n      type: String,\n      default: ''\n    },\n    alt: String,\n    imgStyle: Object,\n\n    viewMode: Number,\n    dragMode: String,\n    aspectRatio: Number,\n    data: Object,\n    preview: previewPropType,\n    responsive: {\n      type: Boolean,\n      default: true\n    },\n    restore: {\n      type: Boolean,\n      default: true\n    },\n    checkCrossOrigin: {\n      type: Boolean,\n      default: true\n    },\n    checkOrientation: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    guides: {\n      type: Boolean,\n      default: true\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoCrop: {\n      type: Boolean,\n      default: true\n    },\n    autoCropArea: Number,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    rotatable: {\n      type: Boolean,\n      default: true\n    },\n    scalable: {\n      type: Boolean,\n      default: true\n    },\n    zoomable: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnTouch: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnWheel: {\n      type: Boolean,\n      default: true\n    },\n    wheelZoomRatio: Number,\n    cropBoxMovable: {\n      type: Boolean,\n      default: true\n    },\n    cropBoxResizable: {\n      type: Boolean,\n      default: true\n    },\n    toggleDragModeOnDblclick: {\n      type: Boolean,\n      default: true\n    },\n\n    minCanvasWidth: Number,\n    minCanvasHeight: Number,\n    minCropBoxWidth: Number,\n    minCropBoxHeight: Number,\n    minContainerWidth: Number,\n    minContainerHeight: Number,\n\n    ready: Function,\n    cropstart: Function,\n    cropmove: Function,\n    cropend: Function,\n    crop: Function,\n    zoom: Function\n  },\n  mounted: function mounted() {\n    var _$options$props = this.$options.props,\n        containerStyle = _$options$props.containerStyle,\n        src = _$options$props.src,\n        alt = _$options$props.alt,\n        imgStyle = _$options$props.imgStyle,\n        data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n    var props = {};\n\n    for (var key in data) {\n      if (this[key] !== undefined) {\n        props[key] = this[key];\n      }\n    }\n\n    this.cropper = new _cropperjs2.default(this.$refs.img, props);\n  },\n\n  methods: {\n    reset: function reset() {\n      return this.cropper.reset();\n    },\n    clear: function clear() {\n      return this.cropper.clear();\n    },\n    initCrop: function initCrop() {\n      return this.cropper.crop();\n    },\n    replace: function replace(url) {\n      var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return this.cropper.replace(url, onlyColorChanged);\n    },\n    enable: function enable() {\n      return this.cropper.enable();\n    },\n    disable: function disable() {\n      return this.cropper.disable();\n    },\n    destroy: function destroy() {\n      return this.cropper.destroy();\n    },\n    move: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    },\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n      return this.cropper.moveTo(x, y);\n    },\n    relativeZoom: function relativeZoom(ratio, _originalEvent) {\n      return this.cropper.zoom(ratio, _originalEvent);\n    },\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      return this.cropper.zoomTo(ratio, _originalEvent);\n    },\n    rotate: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    },\n    rotateTo: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    },\n    scaleX: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    },\n    scaleY: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    },\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n      return this.cropper.scale(scaleX, scaleY);\n    },\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      return this.cropper.getData(rounded);\n    },\n    setData: function setData(data) {\n      return this.cropper.setData(data);\n    },\n    getContainerData: function getContainerData() {\n      return this.cropper.getContainerData();\n    },\n    getImageData: function getImageData() {\n      return this.cropper.getImageData();\n    },\n    getCanvasData: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    },\n    setCanvasData: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    },\n    getCropBoxData: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    },\n    setCropBoxData: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    },\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return this.cropper.getCroppedCanvas(options);\n    },\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    },\n    setDragMode: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }\n};","/*!\n * Cropper.js v1.5.4\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-08-03T08:38:42.128Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // No primary button (Usually the left button)\n      // Note that touch events have no `buttons` or `button` property\n      || isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n"],"sourceRoot":""}